# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: 
      - main
      - feature/*

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: List contents of the current directory
      run: ls

    # - name: Navigate to project directory
    #   run: | 
    #       ls 
    #   working-directory: sequence-insights

    - name: Restore dependencies
      run: dotnet restore
      working-directory: sequence-insights

    - name: Build
      run: dotnet build --no-restore -c Release
      working-directory: sequence-insights

    - name: Log contents of the test directory
      run: ls -R sequence-insights/src/SequenceInsights.Application/bin/

    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: sequence-insights

    - name: Run tests with coverage
      run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      working-directory: sequence-insights

    # - name: Generate coverage report
    #   working-directory: sequence-insights  
    #   run: |
    #      dotnet tool install --tool-path . dotnet-reportgenerator-globaltool --add-source https://api.nuget.org/v3/index.json --ignore-failed-sources
    #      # ./reportgenerator -reports:${{ github.workspace }}/UnitTestResults/coverage.cobertura.xml  -targetdir:${{ github.workspace }}/UnitTestResults/cobertura -reporttypes:Html
    #      ./reportgenerator -reports:coverage.opencover.xml -targetdir:coverlet-report -reporttypes:Html
    #      # mkdir -p /UnitTestResults/cobertura
    #      ls -R sequence-insights

    # - name: Upload coverage report
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: coverlet-report
    #     path: coverlet-report

    - name: Publish Artifact
      uses: actions/upload-artifact@v2
      with:
        name: MyExecutable
        path: /sequence-insights/src/SequenceInsights.Application/bin/Release/net6.0/publish
        working-directory: sequence-insights

    # - name: Create GitHub Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   with:
    #     tag_name: v1.0.0
    #     release_name: Release v1.0.0
    #     draft: false
    #     prerelease: false
